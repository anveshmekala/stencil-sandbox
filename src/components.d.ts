/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AnveshmekalaRadioGroup {
    }
    interface AnveshmekalaRadioItem {
        "checked": boolean;
        "label": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface ProgressBar {
        "type": string;
    }
    interface SelectProgressbar {
    }
}
declare global {
    interface HTMLAnveshmekalaRadioGroupElement extends Components.AnveshmekalaRadioGroup, HTMLStencilElement {
    }
    var HTMLAnveshmekalaRadioGroupElement: {
        prototype: HTMLAnveshmekalaRadioGroupElement;
        new (): HTMLAnveshmekalaRadioGroupElement;
    };
    interface HTMLAnveshmekalaRadioItemElement extends Components.AnveshmekalaRadioItem, HTMLStencilElement {
    }
    var HTMLAnveshmekalaRadioItemElement: {
        prototype: HTMLAnveshmekalaRadioItemElement;
        new (): HTMLAnveshmekalaRadioItemElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLProgressBarElement extends Components.ProgressBar, HTMLStencilElement {
    }
    var HTMLProgressBarElement: {
        prototype: HTMLProgressBarElement;
        new (): HTMLProgressBarElement;
    };
    interface HTMLSelectProgressbarElement extends Components.SelectProgressbar, HTMLStencilElement {
    }
    var HTMLSelectProgressbarElement: {
        prototype: HTMLSelectProgressbarElement;
        new (): HTMLSelectProgressbarElement;
    };
    interface HTMLElementTagNameMap {
        "anveshmekala-radio-group": HTMLAnveshmekalaRadioGroupElement;
        "anveshmekala-radio-item": HTMLAnveshmekalaRadioItemElement;
        "my-component": HTMLMyComponentElement;
        "progress-bar": HTMLProgressBarElement;
        "select-progressbar": HTMLSelectProgressbarElement;
    }
}
declare namespace LocalJSX {
    interface AnveshmekalaRadioGroup {
        "onOptionChanged"?: (event: CustomEvent<{ selectedRadioItem: string }>) => void;
    }
    interface AnveshmekalaRadioItem {
        "checked"?: boolean;
        "label"?: string;
        "onOptionSelected"?: (event: CustomEvent<{ name: string }>) => void;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface ProgressBar {
        "type"?: string;
    }
    interface SelectProgressbar {
    }
    interface IntrinsicElements {
        "anveshmekala-radio-group": AnveshmekalaRadioGroup;
        "anveshmekala-radio-item": AnveshmekalaRadioItem;
        "my-component": MyComponent;
        "progress-bar": ProgressBar;
        "select-progressbar": SelectProgressbar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "anveshmekala-radio-group": LocalJSX.AnveshmekalaRadioGroup & JSXBase.HTMLAttributes<HTMLAnveshmekalaRadioGroupElement>;
            "anveshmekala-radio-item": LocalJSX.AnveshmekalaRadioItem & JSXBase.HTMLAttributes<HTMLAnveshmekalaRadioItemElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "progress-bar": LocalJSX.ProgressBar & JSXBase.HTMLAttributes<HTMLProgressBarElement>;
            "select-progressbar": LocalJSX.SelectProgressbar & JSXBase.HTMLAttributes<HTMLSelectProgressbarElement>;
        }
    }
}
